# -*- coding: utf-8 -*-
from urllib.request import urlopen
import requests
from bs4 import BeautifulSoup
import flashback

def getLinks():
	return ["https://www.flashback.org/t2970428"]
	links = []
	latestPosts = urlopen('https://www.flashback.org/nya-inlagg').read()
	soup = BeautifulSoup(latestPosts, 'html.parser')
	content = soup.find(id="site-content")

	for link in content.find_all('a'):
		href = link.get('href')
		
		# Get threads, not forums (f)
		if href[1] == "t" and href[-1] != "s":
			links.append("http://www.flashback.org" + href)

	return links

def getStocks():
	return {'AAK': 'AAK', 'ABB Ltd': 'ABB', 'ÅF B': 'AF B', 'Ahlsell': 'AHSL', 'Alfa Laval': 'ALFA', 'Autoliv SDB': 'ALIV SDB', 'Ahlstrom-Munksjö Oyj': 'AM1S', 'Arion Banki SDB': 'ARION SDB', 'Arjo B': 'ARJO B', 'ASSA ABLOY B': 'ASSA B', 'Atlas Copco A': 'ATCO A', 'Atlas Copco B': 'ATCO B', 'Atrium Ljungberg B': 'ATRLJ B', 'Attendo': 'ATT', 'Axfood': 'AXFO', 'Axis': 'AXIS', 'Avanza Bank Holding': 'AZA', 'AstraZeneca': 'AZN', 'Fast. Balder B': 'BALD B', 'Betsson B': 'BETS B', 'BillerudKorsnäs': 'BILL', 'Boliden': 'BOL', 'Bonava A': 'BONAV A', 'Bonava B': 'BONAV B', 'Bravida Holding': 'BRAV', 'Castellum': 'CAST', 'Collector': 'COLL', 'Com Hem Holding': 'COMH', 'Dometic Group': 'DOM', 'Elekta B': 'EKTA B', 'Electrolux A': 'ELUX A', 'Electrolux B': 'ELUX B', 'Epiroc A': 'EPI A', 'Epiroc B': 'EPI B', 'Ericsson A': 'ERIC A', 'Ericsson B': 'ERIC B', 'Essity A': 'ESSITY A', 'Essity B': 'ESSITY B', 'Evolution Gaming Group': 'EVO', 'Fabege': 'FABG', 'Fingerprint Cards B': 'FING B', 'Getinge B': 'GETI B', 'Hemfosa Fastigheter': 'HEMF', 'Hemfosa Fastigheter Pref': 'HEMF PREF', 'Hexagon B': 'HEXA B', 'Hennes & Mauritz B': 'HM B', 'Holmen A': 'HOLM A', 'Holmen B': 'HOLM B', 'HEXPOL B': 'HPOL B', 'Hufvudstaden A': 'HUFV A', 'Hufvudstaden C': 'HUFV C', 'Husqvarna A': 'HUSQ A', 'Husqvarna B': 'HUSQ B', 'ICA Gruppen': 'ICA', 'Indutrade': 'INDT', 'Industrivärden A': 'INDU A', 'Industrivärden C': 'INDU C', 'Intrum': 'INTRUM', 'Investor A': 'INVE A', 'Investor B': 'INVE B', 'JM': 'JM', 'Kindred Group': 'KIND SDB', 'Kinnevik A': 'KINV A', 'Kinnevik B': 'KINV B', 'Kungsleden': 'KLED', 'Klövern A': 'KLOV A', 'Klövern B': 'KLOV B', 'Klövern pref': 'KLOV PREF', 'Latour B': 'LATO B', 'LeoVegas': 'LEO', 'Lifco B': 'LIFCO B', 'Loomis B': 'LOOM B', 'Lundin Mining Corporation': 'LUMI', 'Lundbergföretagen B': 'LUND B', 'Lundin Petroleum': 'LUPE', 'Millicom Int. Cellular SDB': 'MIC SDB', 'Modern Times Group A': 'MTG A', 'Modern Times Group B': 'MTG B', 'Munters Group': 'MTRS', 'NCC A': 'NCC A', 'NCC B': 'NCC B', 'Nordea Bank': 'NDA SEK', 'NetEnt B': 'NET B', 'NIBE Industrier B': 'NIBE B', 'Nobia': 'NOBI', 'Oriflame Holding': 'ORI', 'Peab B': 'PEAB B', 'Pandox B': 'PNDX B', 'Ratos A': 'RATO A', 'Ratos B': 'RATO B', 'Resurs Holding': 'RESURS', 'SAAB B': 'SAAB B', 'Sagax A': 'SAGA A', 'Sagax B': 'SAGA B', 'Sagax D': 'SAGA D', 'Sagax pref': 'SAGA PREF', 'Sandvik': 'SAND', 'SCA A': 'SCA A', 'SCA B': 'SCA B', 'SEB A': 'SEB A', 'SEB C': 'SEB C', 'Securitas B': 'SECU B', 'Sv. Handelsbanken A': 'SHB A', 'Sv. Handelsbanken B': 'SHB B', 'Skanska B': 'SKA B', 'SKF A': 'SKF A', 'SKF B': 'SKF B', 'Swedish Orphan Biovitrum': 'SOBI', 'SSAB A': 'SSAB A', 'SSAB B': 'SSAB B', 'Stora Enso A': 'STE A', 'Stora Enso R': 'STE R', 'SWECO A': 'SWEC A', 'SWECO B': 'SWEC B', 'Swedbank A': 'SWED A', 'Swedish Match': 'SWMA', 'Tele2 A': 'TEL2 A', 'Tele2 B': 'TEL2 B', 'Telia Company': 'TELIA', 'Thule Group': 'THULE', 'Tieto Oyj': 'TIETOS', 'Trelleborg B': 'TREL B', 'Veoneer SDB': 'VNE SDB', 'Volvo A': 'VOLV A', 'Volvo B': 'VOLV B', 'Wallenstam B': 'WALL B', 'Wihlborgs Fastigheter': 'WIHL', 'AcadeMedia': 'ACAD', 'Acando B': 'ACAN B', 'Addtech B': 'ADDT B', 'AddLife B': 'ALIF B', 'Alimak Group': 'ALIG', 'Ambea': 'AMBEA', 'Addnode Group B': 'ANOD B', 'Africa Oil': 'AOI', 'AQ Group': 'AQ', 'Alligator Bioscience': 'ATORX', 'Beijer Alma B': 'BEIA B', 'Beijer Ref B': 'BEIJ B', 'Bergman & Beving B': 'BERG B', 'Besqab': 'BESQ', 'Better Collective': 'BETCO', 'Bygghemma Group First': 'BHG', 'Bilia A': 'BILI A', 'BioArctic B': 'BIOA B', 'BioGaia B': 'BIOG B', 'Biotage': 'BIOT', 'Byggmax Group': 'BMAX', 'Boozt': 'BOOZT', 'Bufab': 'BUFAB', 'Bulten': 'BULTEN', 'Bure Equity': 'BURE', 'Calliditas Therapeutics': 'CALTX', 'Camurus': 'CAMX', 'Capio': 'CAPIO', 'Catella A': 'CAT A', 'Catella B': 'CAT B', 'Catena': 'CATE', 'Cavotec': 'CCC', 'CellaVision': 'CEVI', 'Cherry B': 'CHER B', 'Cloetta B': 'CLA B', 'Clas Ohlson B': 'CLAS B', 'CLX Communications': 'CLX', 'Concentric': 'COIC', 'Coor Service Management Hold.': 'COOR', 'Corem Property Group A': 'CORE A', 'Corem Property Group B': 'CORE B', 'Corem Property Group Pref': 'CORE PREF', 'Creades A': 'CRED A', 'Catena Media': 'CTM', 'D. Carnegie & Co B': 'DCAR B', 'Diös Fastigheter': 'DIOS', 'Duni': 'DUNI', 'Dustin Group': 'DUST', 'Eastnine': 'EAST', 'Elanders B': 'ELAN B', 'Eltel': 'ELTEL', 'Internationella Engelska Skola': 'ENG', 'EnQuest PLC': 'ENQ', 'Fagerhult': 'FAG', 'Ferronordic Machines': 'FNM', 'Fenix Outdoor International B': 'FOI B', 'Fast Partner': 'FPAR', 'Fast Partner Pref': 'FPAR PREF', 'G5 Entertainment': 'G5EN', 'Garo': 'GARO', 'Gränges': 'GRNG', 'Gunnebo': 'GUNN', 'Handicare Group': 'HANDI', 'HEBA B': 'HEBA B', 'HiQ International': 'HIQ', 'Haldex': 'HLDX', 'Hansa Medical': 'HMED', 'HMS Networks': 'HMS', 'Hoist Finance': 'HOFI', 'Hexatronic Group': 'HTRO', 'Humana': 'HUM', 'I.A.R Systems Group': 'IAR B', 'Immunovia': 'IMMNOV', 'Instalco Intressenter': 'INSTAL', 'Inwido': 'INWI', 'International Petroleum Corp.': 'IPCO', 'ITAB Shop Concept B': 'ITAB B', 'Invisio Communications': 'IVSO', 'KABE Group B': 'KABE B', 'KappAhl': 'KAHL', 'Karo Pharma': 'KARO', 'Knowit': 'KNOW', 'Lagercrantz Group B': 'LAGR B', 'Lindab International': 'LIAB', 'Lucara Diamond Corp': 'LUC', 'Lundin Gold': 'LUG', 'Magnolia Bostad': 'MAG', 'Medicover B': 'MCOV B', 'Mekonomen': 'MEKO', 'Momentum Group B': 'MMGR B', 'Mr Green & Co': 'MRG', 'Midsona A': 'MSON A', 'Midsona B': 'MSON B', 'Medivir B': 'MVIR B', 'Mycronic': 'MYCR', 'Net Insight B': 'NETI B', 'New Wave B': 'NEWA B', 'NGEx Resources': 'NGQ', 'Nederman Holding': 'NMAN', 'Nobina': 'NOBINA', 'Nolato B': 'NOLA B', 'NP3 Fastigheter': 'NP3', 'NP3 Fastigheter Pref': 'NP3 PREF', 'Nordic Waterproofing Holding': 'NWG', 'OEM International B': 'OEM B', 'Oncopeptides': 'ONCO', 'Oscar Properties Holding': 'OP', 'Oscar Properties Holding PREF': 'OP PREF', 'Oscar Properties Holding PREFB': 'OP PREFB', 'Opus Group': 'OPUS', 'Öresund': 'ORES', 'Orexo': 'ORX', 'Platzer Fastigheter Holding B': 'PLAZ B', 'Probi': 'PROB', 'BlackPearl Resources SDB': 'PXXS SDB', 'Qliro Group': 'QLRO', 'Radisson Hospitality': 'RADH', 'RaySearch Laboratories B': 'RAY B', 'Recipharm B': 'RECI B', 'SAS': 'SAS', 'SAS PREF': 'SAS PREF', 'Scandi Standard': 'SCST', 'SECTRA B': 'SECT B', 'Scandic Hotels Group': 'SHOT', 'SkiStar B': 'SKIS B', 'Semafo': 'SMF', 'Serneke Group B': 'SRNKE B', 'SSM Holding': 'SSM', 'Starbreeze A': 'STAR A', 'Starbreeze B': 'STAR B', 'Stendörren Fastigheter B': 'STEF B', 'Svolder A': 'SVOL A', 'Svolder B': 'SVOL B', 'Swedol B': 'SWOL B', 'Systemair': 'SYSR', 'Tethys Oil': 'TETY', 'TF Bank': 'TFBANK', 'Tobii': 'TOBII', 'Traction  B': 'TRAC B', 'Troax Group': 'TROAX', 'VBG GROUP B': 'VBG B', 'Victoria Park A': 'VICP A', 'Victoria Park B': 'VICP B', 'Victoria Park Pref': 'VICP PREF', 'Vitec Software Group B': 'VIT B', 'Vitrolife': 'VITR', 'Vostok New Ventures': 'VNV SDB', 'Volati': 'VOLO', 'Volati Pref': 'VOLO PREF', 'Xvivo Perfusion': 'XVIVO', 'Active Biotech': 'ACTI', 'Agromino': 'AGRO', 'Anoto Group': 'ANOT', 'Arise': 'ARISE', 'Arctic Paper': 'ARP', 'Actic Group': 'ATIC', 'A3 Allmänna IT- och Telekom.': 'ATRE', 'B3 Consulting Group': 'B3', 'Bactiguard Holding B': 'BACTI B', 'Balco Group': 'BALCO', 'BE Group': 'BEGR', 'Beijer Electronics Group': 'BELE', 'BioInvent International': 'BINV', 'BONESUPPORT HOLDING': 'BONEX', 'Bong': 'BONG', 'Björn Borg': 'BORG', 'Boule Diagnostics': 'BOUL', 'Bergs Timber B': 'BRG B', 'BTS Group B': 'BTS B', 'Christian Berner Tech Trade B': 'CBTT B', 'Concordia Maritime B': 'CCOR B', 'Consilium B': 'CONS B', 'C-RAD B': 'CRAD B', 'CTT Systems': 'CTT', 'Dedicare B': 'DEDI', 'DORO': 'DORO', 'Duroc B': 'DURC B', 'Edgeware': 'EDGE', 'Electra Gruppen': 'ELEC', 'Elos Medtech B': 'ELOS B', 'Empir Group B': 'EMPIR B', 'Endomines': 'ENDO', 'Enea': 'ENEA', 'Eniro': 'ENRO', 'Eniro pref': 'ENRO PREF', 'Eolus Vind B': 'EOLU B', 'Episurf B': 'EPIS B', 'Etrion': 'ETX', 'eWork Group': 'EWRK', 'Feelgood Svenska': 'FEEL', 'FM Mattsson Mora Group B': 'FMM B', 'FormPipe Software': 'FPIP', 'GHP Specialty Care': 'GHP', 'Havsfrun Investment B': 'HAV B', 'ICTA': 'ICTA', 'Immunicum': 'IMMU', 'Invuo Technologies': 'INVUO', 'Image Systems': 'IS', 'Karolinska Development B': 'KDEV', 'Lammhults Design Group B': 'LAMM B', 'MedCap': 'MCAP', 'Malmbergs Elektriska B': 'MEAB B', 'Midway A': 'MIDW A', 'Midway B': 'MIDW B', 'Mips': 'MIPS', 'Moberg Pharma': 'MOB', 'MQ Holding': 'MQ', 'Micro Systemation B': 'MSAB B', 'MultiQ International': 'MULQ', 'NAXS': 'NAXS', 'NCAB Group': 'NCAB', 'NGS Group': 'NGS', 'Nilörngruppen B': 'NIL B', 'NOTE': 'NOTE', 'NOVOTEK B': 'NTEK B', 'Nuevolution': 'NUE', 'NeuroVive Pharmaceutical': 'NVP', 'Oasmia Pharmaceutical': 'OASM', 'Odd Molly International': 'ODD', 'Ortivus A': 'ORTI A', 'Ortivus B': 'ORTI B', 'Proact IT Group': 'PACT', 'Projektengagemang Sweden B': 'PENG B', 'Poolia B': 'POOL B', 'Precise Biometrics': 'PREC', 'Prevas B': 'PREV B', 'Pricer B': 'PRIC B', 'Profilgruppen B': 'PROF B', 'Railcare Group': 'RAIL', 'Rejlers B': 'REJL B', 'RNB RETAIL AND BRANDS': 'RNBS', 'Rottneros': 'RROS', 'Saniona': 'SANION', 'Semcon': 'SEMC', 'Sensys Gatso Group': 'SENS', 'SinterCast': 'SINT', 'Softronic B': 'SOF B', 'Sportamore': 'SPOR', 'Strax': 'STRAX', 'Stockwik Förvaltning': 'STWK', 'Svedbergs B': 'SVED B', 'Studsvik': 'SVIK', 'TradeDoubler': 'TRAD', 'Trention': 'TRENT', 'Uniflex B': 'UFLX B', 'Venue Retail Group B': 'VRG B', 'Viking Supply Ships B': 'VSSAB B', 'Wise Group': 'WISE', 'XANO Industri B': 'XANO B', 'ZetaDisplay': 'ZETA'}
	stocks = {}
	nasdaq = requests.get("http://www.nasdaqomxnordic.com/aktier/listed-companies/stockholm")
	soup = BeautifulSoup(nasdaq.text, 'html.parser')
	listedCompanies = soup.find(id="listedCompanies")

	for row in listedCompanies.tbody.find_all('tr'):
		element = row.find_all('td')
		stocks[element[0].string] = element[1].string

	return stocks

def parseFB(links, stocksDic):
	for link in links:

		thread = flashback.get(link)
		for post in thread:
			print(post.content)
		# for post in thread:
		#     print(post.content)

	return None



links = getLinks()
stocksDic = getStocks()
parseFB(links, stocksDic)

